kind: Template
apiVersion: v1
metadata:
  name: daas-app-template
  annotations:
    description: KIE DaaS Sandbox
    version: '0.1'
    iconClass: icon-jboss
    tags: 'daas,kie,kiegroup,jboss'
    openshift.io/display-name: KIE DaaS Sandbox
    openshift.io/provider-display-name: 'Red Hat, Inc.'
    template.openshift.io/long-description: KIE DaaS Sandbox
    template.openshift.io/documentation-url: 'https://www.kiegroup.org'
    template.openshift.io/support-url: 'https://access.redhat.com'
    template.openshift.io/bindable: 'false'
labels:
  template: daas-app-template
  daas: '0.1'
message: KIE DaaS Sandbox
parameters:
  - name: APPLICATION_NAME
    displayName: Application Name
    description: The name for the application.
    value: myapp
    required: true
  - name: IMAGE_STREAM_NAMESPACE
    displayName: ImageStream Namespace
    description: >-
      Namespace in which the ImageStreams for DaaS images are installed. These
      ImageStreams are normally installed in the openshift namespace.  You need
      to modify this parameter only if you installed the ImageStream in a
      different namespace/project. Default is 'openshift'.
    value: openshift
    required: true
  - name: IMAGE_STREAM_TAG
    displayName: ImageStream Tag
    description: A named pointer to an image in an image stream. Default is '0.1'.
    value: '0.1'
    required: true
  - name: DAAS_ACCEPTOR_IMAGE_STREAM_NAME
    displayName: DaaS Acceptor ImageStream Name
    description: >-
      The name of the image stream to use for DaaS Acceptor. Default is
      'daas-acceptor-ubi8'.
    value: daas-acceptor-ubi8
    required: true
  - name: DAAS_DEPLOYER_IMAGE_STREAM_NAME
    displayName: DaaS Deployer ImageStream Name
    description: >-
      The name of the image stream to use for DaaS Deployer. Default is
      'daas-deployer-ubi8'.
    value: daas-deployer-ubi8
    required: true
  - name: DAAS_EXECUTOR_IMAGE_STREAM_NAME
    displayName: DaaS Executor ImageStream Name
    description: >-
      The name of the image stream to use for DaaS Executor. Default is
      'daas-executor-ubi8'.
    value: daas-executor-ubi8
    required: true
  - name: DAAS_ACCEPTOR_HOSTNAME_HTTP
    displayName: Daas Acceptor Custom http Route Hostname
    description: >-
      Custom hostname for DaaS acceptor http service route. Leave blank for
      default hostname, e.g.:
      '<application-name>-acceptor-<project>.<default-domain-suffix>'
    value: ''
  - name: DAAS_DEPLOYER_HOSTNAME_HTTP
    displayName: Daas Deployer Custom http Route Hostname
    description: >-
      Custom hostname for DaaS deployer http service route. Leave blank for
      default hostname, e.g.:
      '<application-name>-deployer-<project>.<default-domain-suffix>'
    value: ''
  - name: DAAS_EXECUTOR_HOSTNAME_HTTP
    displayName: Daas Executor Custom http Route Hostname
    description: >-
      Custom hostname for DaaS executor http service route. Leave blank for
      default hostname, e.g.:
      '<application-name>-executor-<project>.<default-domain-suffix>'
    value: ''
    required: false
  - name: WEBDAV_MOUNT_PATH
    displayName: WebDAV Mount Path
    description: Path of persistent storage for the WebDAV mount.
    value: /var/www/webdav
    required: true
  - name: WEBDAV_VOLUME_CAPACITY
    displayName: WebDAV Volume Capacity
    description: Size of persistent storage for the WebDAV volume.
    value: 1Gi
    required: true
  - name: SCRIPT_DEBUG
    displayName: Script Debug
    description: Whether to run scripts in debug mode.
    value: 'true'
    required: false
objects:
  - kind: ServiceAccount
    apiVersion: v1
    metadata:
      name: '${APPLICATION_NAME}-daas-svcacct'
      labels:
        application: '${APPLICATION_NAME}'
  - kind: RoleBinding
    apiVersion: v1
    metadata:
      name: '${APPLICATION_NAME}-daas-edit'
      labels:
        application: '${APPLICATION_NAME}'
    subjects:
      - kind: ServiceAccount
        name: '${APPLICATION_NAME}-daas-svcacct'
    roleRef:
      name: edit
  - kind: Service
    apiVersion: v1
    spec:
      ports:
        - name: http
          port: 8080
          targetPort: 8080
      selector:
        deploymentConfig: '${APPLICATION_NAME}-daas-acceptor'
      sessionAffinity: ClientIP
      sessionAffinityConfig:
        clientIP:
          timeoutSeconds: 3600
    metadata:
      name: '${APPLICATION_NAME}-daas-acceptor'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-acceptor'
      annotations:
        description: The DaaS acceptor web server ports.
  - kind: Service
    apiVersion: v1
    spec:
      ports:
        - name: http
          port: 8080
          targetPort: 8080
      selector:
        deploymentConfig: '${APPLICATION_NAME}-daas-deployer'
      sessionAffinity: ClientIP
      sessionAffinityConfig:
        clientIP:
          timeoutSeconds: 3600
    metadata:
      name: '${APPLICATION_NAME}-daas-deployer'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-deployer'
      annotations:
        description: The DaaS deployer web server ports.
  - kind: Service
    apiVersion: v1
    spec:
      ports:
        - name: http
          port: 8080
          targetPort: 8080
      selector:
        deploymentConfig: '${APPLICATION_NAME}-daas-executor'
      sessionAffinity: ClientIP
      sessionAffinityConfig:
        clientIP:
          timeoutSeconds: 3600
    metadata:
      name: '${APPLICATION_NAME}-daas-executor'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-executor'
      annotations:
        description: The DaaS executor web server ports.
  - kind: Route
    apiVersion: v1
    id: '${APPLICATION_NAME}-daas-acceptor-http'
    metadata:
      name: '${APPLICATION_NAME}-daas-acceptor'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-acceptor'
      annotations:
        description: Route for DaaS acceptor's http service.
        haproxy.router.openshift.io/balance: source
    spec:
      host: '${DAAS_ACCEPTOR_HOSTNAME_HTTP}'
      to:
        name: '${APPLICATION_NAME}-daas-acceptor'
      port:
        targetPort: http
  - kind: Route
    apiVersion: v1
    id: '${APPLICATION_NAME}-daas-deployer-http'
    metadata:
      name: '${APPLICATION_NAME}-daas-deployer'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-deployer'
      annotations:
        description: Route for DaaS deployer's http service.
        haproxy.router.openshift.io/balance: source
    spec:
      host: '${DAAS_ACCEPTOR_HOSTNAME_HTTP}'
      to:
        name: '${APPLICATION_NAME}-daas-deployer'
      port:
        targetPort: http
  - kind: Route
    apiVersion: v1
    id: '${APPLICATION_NAME}-daas-executor-http'
    metadata:
      name: '${APPLICATION_NAME}-daas-executor'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-executor'
      annotations:
        description: Route for DaaS executor's http service.
        haproxy.router.openshift.io/balance: source
    spec:
      host: '${DAAS_ACCEPTOR_HOSTNAME_HTTP}'
      to:
        name: '${APPLICATION_NAME}-daas-executor'
      port:
        targetPort: http
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: '${APPLICATION_NAME}-daas-acceptor'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-acceptor'
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
    spec:
      revisionHistoryLimit: 10
      strategy:
        type: Rolling
        rollingParams:
          maxSurge: 100%
          maxUnavailable: 0
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - '${APPLICATION_NAME}-daas-acceptor'
            from:
              kind: ImageStreamTag
              namespace: '${IMAGE_STREAM_NAMESPACE}'
              name: '${DAAS_ACCEPTOR_IMAGE_STREAM_NAME}:${IMAGE_STREAM_TAG}'
        - type: ConfigChange
      replicas: 1
      selector:
        deploymentConfig: '${APPLICATION_NAME}-daas-acceptor'
      template:
        metadata:
          name: '${APPLICATION_NAME}-daas-acceptor'
          labels:
            deploymentConfig: '${APPLICATION_NAME}-daas-acceptor'
            application: '${APPLICATION_NAME}'
            service: '${APPLICATION_NAME}-daas-acceptor'
        spec:
          serviceAccountName: '${APPLICATION_NAME}-daas-svcacct'
          terminationGracePeriodSeconds: 60
          containers:
            - name: '${APPLICATION_NAME}-daas-acceptor'
              image: '${APPLICATION_NAME}-daas-acceptor'
              imagePullPolicy: Always
              ports:
                - name: http
                  containerPort: 8080
                  protocol: TCP
              env:
                - name: WEBDAV_MOUNT_PATH
                  value: '${WEBDAV_MOUNT_PATH}'
                - name: SCRIPT_DEBUG
                  value: '${SCRIPT_DEBUG}'
              volumeMounts:
                - name: '${APPLICATION_NAME}-daas-acceptor-pvol'
                  mountPath: '${WEBDAV_MOUNT_PATH}'
          volumes:
            - name: '${APPLICATION_NAME}-daas-acceptor-pvol'
              persistentVolumeClaim:
                claimName: '${APPLICATION_NAME}-daas-webdav-claim'
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: '${APPLICATION_NAME}-daas-webdav-claim'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-acceptor'
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: '${WEBDAV_VOLUME_CAPACITY}'
