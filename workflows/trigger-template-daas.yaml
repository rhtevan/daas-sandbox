apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: daas-workflow-template
spec:
  params:
    - name: appname
      description: The application name
      default: 'myapp'
    - name: native
      description: If true build native image
      default: 'true'
    - name: imagetag
      description: A named pointer to an image in an image stream. Default is '0.1'.
      default: '0.1'
    - name: imagenamespace
      description: >-
        Namespace in which the ImageStreams for DaaS images are installed. These
        ImageStreams are normally installed in the openshift namespace.  You need
        to modify this parameter only if you installed the ImageStream in a
        different namespace/project.
      default: 'openshift'
    - name: imageregistry
      description: The endpoint of the image registry to which generated images will be published.
      default: 'image-registry.openshift-image-registry.svc:5000'
    - name: builderimagename
      description: The base imagename used for packaging compiled runner
      default: 'quay.io/kiegroup/kogito-quarkus-ubi8'
    - name: executorhostname
      description: >-
        Custom hostname for DaaS native executor http service route. Leave blank for
        default hostname, e.g.:
        '<application-name>-daas-executor-native-<project>.<default-domain-suffix>'
      default: ''
    - name: debug
      description: Whether to run scripts in debug mode.
      default: 'true'
    - name: fromexample
      description: If true the daas application is cloned from kogito examples.
      default: 'false'
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        name: $(tt.params.appname)-daas-workflow-$(uid)
      spec:
        workspaces:
          - name: res
            persistentVolumeClaim:
              claimName: daas-work-dir-pvc
            subPath: resources
          - name: prj
            persistentVolumeClaim:
              claimName: daas-work-dir-pvc
            subPath: maven/projects
          - name: eg
            persistentVolumeClaim:
              claimName: daas-work-dir-pvc
            subPath: maven/examples
          - name: repo
            persistentVolumeClaim:
              claimName: daas-work-dir-pvc
            subPath: maven/repository
        pipelineSpec:
          workspaces:
            - name: res
            - name: prj
            - name: eg
            - name: repo
          tasks:
            - name: prepare-maven-project
              params:
                - name: APPLICATION_NAME
                  value: '$(tt.params.appname)'
                - name: EXECUTOR_IMAGE
                  value: '$(tt.params.imageregistry)/$(tt.params.imagenamespace)/daas-executor-ubi8:$(tt.params.imagetag)'
                - name: DEBUG
                  value: '$(tt.params.debug)'
                - name: FROM_EXAMPLE
                  value: '$(tt.params.fromexample)'
              workspaces:
                - name: resources
                  workspace: res
                - name: projects
                  workspace: prj
                - name: examples
                  workspace: eg
              taskRef:
                name: work-dir-prepare-daas
                kind: Task
            - name: compile-build-push
              runAfter:
                - prepare-maven-project
              params:
                - name: APPLICATION_NAME
                  value: '$(tt.params.appname)'
                - name: TLSVERIFY
                  value: 'false'
                - name: EXECUTOR_IMAGE
                  value: '$(tt.params.imageregistry)/$(tt.params.imagenamespace)/$(tt.params.appname)-daas-executor-native:$(tt.params.imagetag)'
                - name: BUILDER_IMAGE_NAME
                  value: '$(tt.params.builderimagename)'
                - name: NATIVE
                  value: '$(tt.params.native)'
              workspaces:
                - name: source
                  workspace: prj
                - name: repo
                  workspace: repo
              taskRef:
                name: s2i-kogito
                kind: ClusterTask
            - name: create-openshift-resources
              runAfter:
                - compile-build-push
              taskSpec:
                steps:
                  - name: oc
                    image: 'image-registry.openshift-image-registry.svc:5000/openshift/cli:latest'
                    script: |
                      #!/usr/bin/env bash
                      debug='$(tt.params.debug)'
                      [[ ${debug^^} == 'TRUE' ]] && set -x
                      echo "checking openshift resources for daas"
                      [[ $( oc get dc $(tt.params.appname)-daas-executor-native ) ]] && echo "daas resources found" && exit 0

                      echo "creating openshift resources for daas" 
                      oc apply -f - << 'EOF'
                      ---
                      apiVersion: v1
                      kind: Service
                      metadata:
                        name: '$(tt.params.appname)-daas-executor-native'
                        labels:
                          application: '$(tt.params.appname)'
                          service: '$(tt.params.appname)-daas-executor-native'
                        annotations:
                        description: The native DaaS executor web server ports.
                      spec:
                        ports:
                          - name: http
                            port: 8080
                            targetPort: 8080
                        selector:
                          deploymentConfig: '$(tt.params.appname)-daas-executor-native'
                        sessionAffinity: ClientIP
                        sessionAffinityConfig:
                          clientIP:
                            timeoutSeconds: 3600
                      ---
                      apiVersion: v1
                      kind: Route
                      id: '$(tt.params.appname)-daas-executor-native-http'
                      metadata:
                        name: '$(tt.params.appname)-daas-executor-native'
                      labels:
                        application: '$(tt.params.appname)'
                        service: '$(tt.params.appname)-daas-executor-native'
                      annotations:
                        description: Route for DaaS native executor's http service.
                        haproxy.router.openshift.io/balance: source
                      spec:
                        host: '$(tt.params.executorhostname)'
                        to:
                          name: '$(tt.params.appname)-daas-executor-native'
                        port:
                          targetPort: http
                      ---
                      apiVersion: v1
                      kind: DeploymentConfig
                      metadata:
                        name: '$(tt.params.appname)-daas-executor-native'
                        labels:
                          application: '$(tt.params.appname)'
                          service: '$(tt.params.appname)-daas-executor-native'
                      spec:
                        revisionHistoryLimit: 10
                        strategy:
                          type: Rolling
                          rollingParams:
                            maxSurge: 100%
                            maxUnavailable: 0
                        triggers:
                          - type: ImageChange
                            imageChangeParams:
                              automatic: true
                              containerNames:
                                - '$(tt.params.appname)-daas-executor-native'
                              from:
                                kind: ImageStreamTag
                                namespace: '$(tt.params.imagenamespace)'
                                name: '$(tt.params.appname)-daas-executor-native:$(tt.params.imagetag)'
                          - type: ConfigChange
                        replicas: 1
                        selector:
                          deploymentConfig: '$(tt.params.appname)-daas-executor-native'
                        template:
                          metadata:
                            name: '$(tt.params.appname)-daas-executor-native'
                            labels:
                              deploymentConfig: '$(tt.params.appname)-daas-executor-native'
                              application: '$(tt.params.appname)'
                              service: '$(tt.params.appname)-daas-executor-native'
                          spec:
                            terminationGracePeriodSeconds: 60
                            containers:
                              - name: '$(tt.params.appname)-daas-executor-native'
                                image: '$(tt.params.appname)-daas-executor-native'
                                imagePullPolicy: Always
                                ports:
                                  - name: http
                                    containerPort: 8080
                                    protocol: TCP
                      EOF
