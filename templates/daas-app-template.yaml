kind: Template
apiVersion: v1
metadata:
  name: daas-app-template
  annotations:
    description: KIE DaaS Sandbox
    version: '0.1'
    iconClass: icon-jboss
    tags: 'daas,kie,kiegroup,jboss'
    openshift.io/display-name: KIE DaaS Sandbox
    openshift.io/provider-display-name: 'Red Hat, Inc.'
    template.openshift.io/long-description: KIE DaaS Sandbox
    template.openshift.io/documentation-url: 'https://www.kiegroup.org'
    template.openshift.io/support-url: 'https://access.redhat.com'
    template.openshift.io/bindable: 'false'
labels:
  template: daas-app-template
  daas: '0.1'
message: KIE DaaS Sandbox
parameters:
  - name: APPLICATION_NAME
    displayName: Application Name
    description: The name for the application.
    value: myapp
    required: true
  - name: IMAGE_STREAM_NAMESPACE
    displayName: ImageStream Namespace
    description: >-
      Namespace in which the ImageStreams for DaaS images are installed. These
      ImageStreams are normally installed in the openshift namespace.  You need
      to modify this parameter only if you installed the ImageStream in a
      different namespace/project. Default is 'kiegroup'.
    value: kiegroup
    required: true
  - name: IMAGE_STREAM_TAG
    displayName: ImageStream Tag
    description: A named pointer to an image in an image stream. Default is '0.1'.
    value: '0.1'
    required: true
  - name: DAAS_MODELER_HOSTNAME_HTTP
    displayName: Daas Modeler Custom http Route Hostname
    description: >-
      Custom hostname for DaaS Modeler http service route. Leave blank for
      default hostname, e.g.:
      '<application-name>-modeler-<project>.<default-domain-suffix>'
    value: ''
  - name: DAAS_ACCEPTOR_HOSTNAME_HTTP
    displayName: Daas Acceptor Custom http Route Hostname
    description: >-
      Custom hostname for DaaS acceptor http service route. Leave blank for
      default hostname, e.g.:
      '<application-name>-acceptor-<project>.<default-domain-suffix>'
    value: ''
  - name: DAAS_EXECUTOR_HOSTNAME_HTTP
    displayName: Daas Executor Custom http Route Hostname
    description: >-
      Custom hostname for DaaS executor http service route. Leave blank for
      default hostname, e.g.:
      '<application-name>-executor-<project>.<default-domain-suffix>'
    value: ''
    required: false
  - name: DAAS_EXPLAINABILITY_HOSTNAME_HTTP
    displayName: Daas Explainability Custom http Route Hostname
    description: >-
      Custom hostname for DaaS explainability http service route. Leave blank for
      default hostname, e.g.:
      '<application-name>-explainability-<project>.<default-domain-suffix>'
    value: ''
    required: false
  - name: MAVEN_MIRROR_URL
    displayName: Maven Mirror URL
    description: URL pointing to a Maven Mirror to help speed up builds.
    value: ''
    required: false
  - name: SCRIPT_DEBUG
    displayName: Script Debug
    description: Whether to run scripts in debug mode.
    value: 'true'
    required: false
objects:
  - kind: ServiceAccount
    apiVersion: v1
    metadata:
      name: '${APPLICATION_NAME}-daas-svcacct'
      labels:
        application: '${APPLICATION_NAME}'
  - kind: RoleBinding
    apiVersion: v1
    metadata:
      name: '${APPLICATION_NAME}-daas-edit'
      labels:
        application: '${APPLICATION_NAME}'
    subjects:
      - kind: ServiceAccount
        name: '${APPLICATION_NAME}-daas-svcacct'
    roleRef:
      name: edit
  - kind: Service
    apiVersion: v1
    spec:
      ports:
        - name: http
          port: 8080
          targetPort: 8080
      selector:
        deploymentConfig: '${APPLICATION_NAME}-daas-modeler'
      sessionAffinity: ClientIP
      sessionAffinityConfig:
        clientIP:
          timeoutSeconds: 3600
    metadata:
      name: '${APPLICATION_NAME}-daas-modeler'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-modeler'
      annotations:
        description: The DaaS modeler web server ports.
  - kind: Service
    apiVersion: v1
    spec:
      ports:
        - name: http
          port: 8080
          targetPort: 8080
        - name: modeler
          port: 9090
          targetPort: 9090
      selector:
        deploymentConfig: '${APPLICATION_NAME}-daas-acceptor'
      sessionAffinity: ClientIP
      sessionAffinityConfig:
        clientIP:
          timeoutSeconds: 3600
    metadata:
      name: '${APPLICATION_NAME}-daas-acceptor'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-acceptor'
      annotations:
        description: The DaaS acceptor web server ports.
  - kind: Service
    apiVersion: v1
    spec:
      ports:
        - name: http
          port: 8080
          targetPort: 8080
      selector:
        deploymentConfig: '${APPLICATION_NAME}-daas-executor'
      sessionAffinity: ClientIP
      sessionAffinityConfig:
        clientIP:
          timeoutSeconds: 3600
    metadata:
      name: '${APPLICATION_NAME}-daas-executor'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-executor'
      annotations:
        description: The DaaS executor web server ports.
  - kind: Service
    apiVersion: v1
    spec:
      ports:
        - name: http
          port: 8080
          targetPort: 8080
      selector:
        deploymentConfig: '${APPLICATION_NAME}-daas-explainability'
      sessionAffinity: ClientIP
      sessionAffinityConfig:
        clientIP:
          timeoutSeconds: 3600
    metadata:
      name: '${APPLICATION_NAME}-daas-explainability'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-explainability'
      annotations:
        description: The DaaS explainability web server ports.
  - kind: Route
    apiVersion: v1
    id: '${APPLICATION_NAME}-daas-modeler-http'
    metadata:
      name: '${APPLICATION_NAME}-daas-modeler'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-modeler'
      annotations:
        description: Route for DaaS modeler's http service.
        haproxy.router.openshift.io/balance: source
    spec:
      host: '${DAAS_MODELER_HOSTNAME_HTTP}'
      to:
        name: '${APPLICATION_NAME}-daas-modeler'
      port:
        targetPort: http
  - kind: Route
    apiVersion: v1
    id: '${APPLICATION_NAME}-daas-acceptor-http'
    metadata:
      name: '${APPLICATION_NAME}-daas-acceptor'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-acceptor'
      annotations:
        description: Route for DaaS acceptor's http service.
        haproxy.router.openshift.io/balance: source
    spec:
      host: '${DAAS_ACCEPTOR_HOSTNAME_HTTP}'
      to:
        name: '${APPLICATION_NAME}-daas-acceptor'
      port:
        targetPort: http
  - kind: Route
    apiVersion: v1
    id: '${APPLICATION_NAME}-daas-executor-http'
    metadata:
      name: '${APPLICATION_NAME}-daas-executor'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-executor'
      annotations:
        description: Route for DaaS executor's http service.
        haproxy.router.openshift.io/balance: source
    spec:
      host: '${DAAS_EXECUTOR_HOSTNAME_HTTP}'
      to:
        name: '${APPLICATION_NAME}-daas-executor'
      port:
        targetPort: http
  - kind: Route
    apiVersion: v1
    id: '${APPLICATION_NAME}-daas-explainability-http'
    metadata:
      name: '${APPLICATION_NAME}-daas-explainability'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-explainability'
      annotations:
        description: Route for DaaS explainability's http service.
        haproxy.router.openshift.io/balance: source
    spec:
      host: '${DAAS_EXPLAINABILITY_HOSTNAME_HTTP}'
      to:
        name: '${APPLICATION_NAME}-daas-explainability'
      port:
        targetPort: http
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: '${APPLICATION_NAME}-daas-modeler'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-modeler'
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
    spec:
      revisionHistoryLimit: 10
      strategy:
        type: Rolling
        rollingParams:
          maxSurge: 100%
          maxUnavailable: 0
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - '${APPLICATION_NAME}-daas-modeler'
            from:
              kind: ImageStreamTag
              namespace: '${IMAGE_STREAM_NAMESPACE}'
              name: 'daas-modeler-ubi8:${IMAGE_STREAM_TAG}'
        - type: ConfigChange
      replicas: 1
      selector:
        deploymentConfig: '${APPLICATION_NAME}-daas-modeler'
      template:
        metadata:
          name: '${APPLICATION_NAME}-daas-modeler'
          labels:
            deploymentConfig: '${APPLICATION_NAME}-daas-modeler'
            application: '${APPLICATION_NAME}'
            service: '${APPLICATION_NAME}-daas-modeler'
        spec:
          serviceAccountName: '${APPLICATION_NAME}-daas-svcacct'
          terminationGracePeriodSeconds: 60
          containers:
            - name: '${APPLICATION_NAME}-daas-modeler'
              image: 'daas-modeler-ubi8'
              imagePullPolicy: Always
              ports:
                - name: http
                  containerPort: 8080
                  protocol: TCP
              env:
                - name: APPLICATION_NAME
                  value: '${APPLICATION_NAME}'
                - name: DAAS_ACCEPTOR_ROUTE_NAME
                  value: '${APPLICATION_NAME}-daas-acceptor'
                - name: DAAS_ACCEPTOR_HOSTNAME_HTTP
                  value: '${DAAS_ACCEPTOR_HOSTNAME_HTTP}'
                - name: DAAS_EXECUTOR_ROUTE_NAME
                  value: '${APPLICATION_NAME}-daas-executor'
                - name: DAAS_EXECUTOR_HOSTNAME_HTTP
                  value: '${DAAS_EXECUTOR_HOSTNAME_HTTP}'
                - name: DAAS_EXPLAINABILITY_ROUTE_NAME
                  value: '${APPLICATION_NAME}-daas-explainability'
                - name: DAAS_EXPLAINABILITY_HOSTNAME_HTTP
                  value: '${DAAS_EXPLAINABILITY_HOSTNAME_HTTP}'
                - name: SCRIPT_DEBUG
                  value: '${SCRIPT_DEBUG}'
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: '${APPLICATION_NAME}-daas-acceptor'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-acceptor'
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
    spec:
      revisionHistoryLimit: 10
      strategy:
        type: Rolling
        rollingParams:
          maxSurge: 100%
          maxUnavailable: 0
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - '${APPLICATION_NAME}-daas-acceptor'
            from:
              kind: ImageStreamTag
              namespace: '${IMAGE_STREAM_NAMESPACE}'
              name: 'daas-acceptor-ubi8:${IMAGE_STREAM_TAG}'
        - type: ConfigChange
      replicas: 1
      selector:
        deploymentConfig: '${APPLICATION_NAME}-daas-acceptor'
      template:
        metadata:
          name: '${APPLICATION_NAME}-daas-acceptor'
          labels:
            deploymentConfig: '${APPLICATION_NAME}-daas-acceptor'
            application: '${APPLICATION_NAME}'
            service: '${APPLICATION_NAME}-daas-acceptor'
        spec:
          serviceAccountName: '${APPLICATION_NAME}-daas-svcacct'
          terminationGracePeriodSeconds: 60
          containers:
            - name: '${APPLICATION_NAME}-daas-acceptor'
              image: 'daas-acceptor-ubi8'
              imagePullPolicy: Always
              ports:
                - name: http
                  containerPort: 8080
                  protocol: TCP
              env:
                - name: APPLICATION_NAME
                  value: '${APPLICATION_NAME}'
                - name: SCRIPT_DEBUG
                  value: '${SCRIPT_DEBUG}'
              volumeMounts:
                - name: 'daas-work-dir'
                  subPath: 'resources/${APPLICATION_NAME}'
                  mountPath: '/home/daas/app/src/main/resources'
                - name: 'daas-work-dir'
                  subPath: 'projects/${APPLICATION_NAME}'
                  mountPath: '/home/daas/modeler/projects'
          volumes:
            - name: 'daas-work-dir'
              persistentVolumeClaim:
                claimName: 'daas-work-dir-pvc'
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: '${APPLICATION_NAME}-daas-executor'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-executor'
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
    spec:
      revisionHistoryLimit: 10
      strategy:
        type: Rolling
        rollingParams:
          maxSurge: 100%
          maxUnavailable: 0
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - '${APPLICATION_NAME}-daas-executor'
            from:
              kind: ImageStreamTag
              namespace: '${IMAGE_STREAM_NAMESPACE}'
              name: 'daas-executor-ubi8:${IMAGE_STREAM_TAG}'
        - type: ConfigChange
      replicas: 1
      selector:
        deploymentConfig: '${APPLICATION_NAME}-daas-executor'
      template:
        metadata:
          name: '${APPLICATION_NAME}-daas-executor'
          labels:
            deploymentConfig: '${APPLICATION_NAME}-daas-executor'
            application: '${APPLICATION_NAME}'
            service: '${APPLICATION_NAME}-daas-executor'
        spec:
          serviceAccountName: '${APPLICATION_NAME}-daas-svcacct'
          terminationGracePeriodSeconds: 60
          containers:
            - name: '${APPLICATION_NAME}-daas-executor'
              image: 'daas-executor-ubi8'
              imagePullPolicy: Always
              ports:
                - name: http
                  containerPort: 8080
                  protocol: TCP
              env:
                - name: APPLICATION_NAME
                  value: '${APPLICATION_NAME}'
                - name: MAVEN_MIRROR_URL
                  value: '${MAVEN_MIRROR_URL}'
                - name: SCRIPT_DEBUG
                  value: '${SCRIPT_DEBUG}'
              volumeMounts:
                - name: 'daas-work-dir'
                  subPath: 'resources/${APPLICATION_NAME}'
                  mountPath: '/home/daas/app/src/main/resources'
          volumes:
            - name: 'daas-work-dir'
              persistentVolumeClaim:
                claimName: 'daas-work-dir-pvc'
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: '${APPLICATION_NAME}-daas-explainability'
      labels:
        application: '${APPLICATION_NAME}'
        service: '${APPLICATION_NAME}-daas-explainability'
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
    spec:
      revisionHistoryLimit: 10
      strategy:
        type: Rolling
        rollingParams:
          maxSurge: 100%
          maxUnavailable: 0
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - '${APPLICATION_NAME}-daas-explainability'
            from:
              kind: ImageStreamTag
              namespace: '${IMAGE_STREAM_NAMESPACE}'
              name: 'daas-explainability-ubi8:${IMAGE_STREAM_TAG}'
        - type: ConfigChange
      replicas: 1
      selector:
        deploymentConfig: '${APPLICATION_NAME}-daas-explainability'
      template:
        metadata:
          name: '${APPLICATION_NAME}-daas-explainability'
          labels:
            deploymentConfig: '${APPLICATION_NAME}-daas-explainability'
            application: '${APPLICATION_NAME}'
            service: '${APPLICATION_NAME}-daas-explainability'
        spec:
          serviceAccountName: '${APPLICATION_NAME}-daas-svcacct'
          terminationGracePeriodSeconds: 60
          containers:
            - name: '${APPLICATION_NAME}-daas-explainability'
              image: 'daas-explainability-ubi8'
              imagePullPolicy: Always
              ports:
                - name: http
                  containerPort: 8080
                  protocol: TCP
